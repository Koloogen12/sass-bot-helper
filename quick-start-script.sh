#!/bin/bash

# SaaSBoostBot Quick Start Script

echo "üöÄ SaaSBoostBot - –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç"
echo "================================"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
if ! command -v python3 &> /dev/null; then
    echo "‚ùå Python 3 –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.10+"
    exit 1
fi

echo "‚úÖ Python –Ω–∞–π–¥–µ–Ω: $(python3 --version)"

# –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [ ! -d "venv" ]; then
    echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    python3 -m venv venv
fi

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo "üîß –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
source venv/bin/activate || . venv/Scripts/activate

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
pip install --upgrade pip
pip install -r requirements.txt

# –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞..."
mkdir -p data logs

# –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
if [ ! -f ".env" ]; then
    echo "‚öôÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞..."
    cp .env.example .env
    echo ""
    echo "‚ö†Ô∏è  –í–ê–ñ–ù–û: –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤–∞—à–∏ —Ç–æ–∫–µ–Ω—ã:"
    echo "   - TELEGRAM_BOT_TOKEN"
    echo "   - OPENAI_API_KEY"
    echo ""
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤..."
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–æ–≤ JSON —Ñ–∞–π–ª–æ–≤ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
if [ ! -f "data/saas_knowledge.json" ]; then
    echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–æ–≤ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π..."
    
    # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π —Ñ–∞–π–ª –∑–Ω–∞–Ω–∏–π
    cat > data/saas_knowledge.json << 'EOF'
{
  "documents": [
    {
      "title": "–ö–∞–∫ –Ω–∞–π—Ç–∏ Product-Market Fit",
      "category": "validation",
      "content": "Product-Market Fit –¥–æ—Å—Ç–∏–≥–∞–µ—Ç—Å—è –∫–æ–≥–¥–∞ –ø—Ä–æ–¥—É–∫—Ç —Ä–µ—à–∞–µ—Ç —Ä–µ–∞–ª—å–Ω—É—é –ø—Ä–æ–±–ª–µ–º—É —Ü–µ–ª–µ–≤–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏. –ü—Ä–∏–∑–Ω–∞–∫–∏ PMF: –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏–π —Ä–æ—Å—Ç, –≤—ã—Å–æ–∫–∏–π retention (>85%), NPS > 50. –ü—É—Ç—å –∫ PMF: 1) –ì–ª—É–±–æ–∫–∏–µ –∏–Ω—Ç–µ—Ä–≤—å—é —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏ (50+), 2) –§–æ–∫—É—Å –Ω–∞ —É–∑–∫–æ–π –Ω–∏—à–µ, 3) –ë—ã—Å—Ç—Ä—ã–µ –∏—Ç–µ—Ä–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ñ–∏–¥–±–µ–∫–∞.",
      "tags": ["pmf", "validation", "startup"]
    },
    {
      "title": "–ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏ SaaS",
      "category": "metrics",
      "content": "–û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏: MRR (–µ–∂–µ–º–µ—Å—è—á–Ω–∞—è –≤—ã—Ä—É—á–∫–∞), Churn Rate (<5% –¥–ª—è B2B), LTV:CAC (>3:1), NRR (>100%). –û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ cohort retention –∏ –≤—Ä–µ–º—è –¥–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏.",
      "tags": ["metrics", "analytics", "growth"]
    }
  ]
}
EOF
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
if grep -q "your_telegram_bot_token_here" .env || grep -q "your_openai_api_key_here" .env; then
    echo ""
    echo "‚ùå –û–®–ò–ë–ö–ê: –¢–æ–∫–µ–Ω—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –≤ .env —Ñ–∞–π–ª–µ!"
    echo "   –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env –∏ –¥–æ–±–∞–≤—å—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã"
    exit 1
fi

echo ""
echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "üöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
echo "   python bot.py"
echo ""
echo "üìö –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "   python test_bot.py    - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"
echo "   python check_db.py    - –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
echo ""
echo "üí° –°–æ–≤–µ—Ç: –î–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ JSON —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫—É data/ –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π"
